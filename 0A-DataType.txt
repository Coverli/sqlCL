
在设计表的时候，应该特别重视所用的数据类型。使用错误的数据类型可能会严重得影响应用程序的功能和性能。
后期更改包含数据的列也不是一件小事，会导致数据的丢失。

MySQL的数据类型可以分为４类：串数据类型、数值数据类型、日期和时间数据类型、二进制数据类型


-----------------------------------------------------------------------------


D.1 串数据类型
最常用的数据类型是串数据类型。他们存储串，如名字、地址、电话号码、邮政编码等。
有两种基本的串类型，分别是定长串和变长串。
	定长串接受长度固定的字符串，其长度是在创建时指定的。定长串不允许多于指定的字符数目。它们分配的存储空间与指定的一样多，

	变长串存储可变长度的文本。有些变长数据具有最大的定长，有些则是完全变长的。但无论哪种，只有指定的数据得到保存

	既然变长数据类型这样灵活，为什么还有使用定长数据类型？
	因为性能。MySQL处理定长列远比处理变长列快得多。此外，MySQL不允许对变长列（或一个列的可变部分）进行索引，这会极大地影响性能。

串数据类型的说明
CHAR		1~255个字符的定长串，它的长度必须在创建的时候指定，否则MySQL假定为CHAR(1)
ENUM		枚举类型，接受最多64K个串组成的一个预定义集合的某个串
TEXT		最大长度为64K的变长文本
TINYTEXT	与TEXT相同，但最大长度为255字节
MEDIUMTEXT	与TEXT相同，但最大长度为16K
LONGTEXT	与TEXT相同，但最大长度为64GB
SET			接受最多64个串组成的一个预定义集合的零个或多个串，set其实和枚举差不多，set指定了一个集合范围，在我们插入数据的时候，需要插入在set范围之内的元素，如果插入了未被包含的元素，那么就会发出警告
VARCHAR		长度可变，最多不超过255字节。如果在创建时指定为VARCHAR(n)，则可存储0到n个字符的变长串

补充：
	（1）不管使用何种形式的串数据类型，串值都必须括在引号内（单引号更好）
	（2）如果在将电话号码或邮政编码设为数值数据类型，那么很有可能会引起数据丢失，例如邮政编码01234存储为数值字段，那么实际存储的是1234，会丢失前面的数字0
	（3）需要遵守的基本规则：如果数值是计算中使用的数值，则应该设为数值数据类型；如果作为字符串使用，则应该设为串数据类型


-----------------------------------------------------------------------------


D.2 数值数据类型
数值数据类型存储数值。MySQL支持多种数值数据类型，每种存储的数值具有不同的取值范围。显然，支持的取值范围越大，所需存储空间越多。此外，有的数值数据类型支持使用十进制小数点（和小数），而有的则只支持整数。

	有符号或无符号 所有数值数据类型（除BIT和BOOLEAN外）都可以有符号或无符号。有符号数值列可以存储正或负的数值，无符号数值列只能存储正数。默认情况为有符号，但如果你知道自己不需要存储负值，可以使用UNSIGNED关键字，这样做将允许你存储两倍大小的值。

BIT               位字段，1~64位。（在MySQL5之前，BIT在功能上等价于TINYINT）
BOOLEAN(或BOOL)   布尔标志，或者为0或者为1,主要用于开／关（on/off)标志
REAL              4字节的浮点值
DECIMAL(或DEC)    精度可变的浮点值
FLOAT             单精度浮点值
DOUBLE            双精度浮点值
TINYINT           整数值，支持-128~127(如果为UNSIGNED,为0~255)的数
SMALLINT          整数值，支持-32768~32767(如果是UNSIGNED,为0~65535)的数
MEDIUMINT         整数值，支持-8388608~8388607(如果是UNSIGNED,为0~16777215)的数
INT(或INTEGER)    整数值，支持-2147483648~2147483647(如果是UNSIGNED,为0~4294967295)的数
BIGINT            整数值，支持-9223372036854775808~9223372036854775807（如果是UNSIGNED,为0~18446744073709551615)的数

补充：
	（1）与串不一样，数值不应该括在引号内
	（2）MySQL中没有专门存储货币的数据类型，一般情况下使用DECIMAL(8,2)
	（3）INT类型具有ZEROFILL属性，在定义数据类型时加上ZEROFILL即可，例如
		创建表：
			CREATE TABLE zf_demo (zf1 int(5) ZEROFILL);
		插入数据：
			insert into zf_demo VALUES (12);
		查询数据：
			SELECT * FROM zf_demo;
		输出：
			mysql>  +-------+
					| zf1   |
					+-------+
					| 00012 |
					+-------+


-----------------------------------------------------------------------------


D.3 日期和时间数据类型
MySQL使用专门的数据类型来存储日期和时间值

DATE       表示1000-01-01～9999-12-31的日期，格式为YYYY-MM-DD
TIME       格式为HH:MM:SS，插入时支持HHMMSS格式
DATETIME   DATE和TIME的组合
TIMESTAMP  功能和DATETIME相同，但范围较小
YEAR       用2位数字表示，范围是70（1970年）～69（2069年）；用4位数字表示，范围是1901年～2155年

补充：
	一、DATE函数：
		1、要获取当前日期和时间，可以使用NOW()函数，例如：
			SELECT NOW() as cur_datetime;
			mysql>  +---------------------+
					| cur_datetime        |
					+---------------------+
					| 2022-07-18 16:15:17 |
					+---------------------+
		2、要获取DATETIME值的日期部分，可以使用DATE()函数，例如：
			SELECT DATE(NOW());
			mysql>  +-------------+
					| DATE(NOW()) |
					+-------------+
					| 2022-07-18  |
					+-------------+
		3、要获取当前的系统日期，可以使用CURDATE()函数，例如：
			SELECT CURDATE();
			mysql>  +------------+
					| CURDATE()  |
					+------------+
					| 2022-07-18 |
					+------------+
		4、要格式化日期值，可以使用DATE_FORMAT函数。以下语句使用日期格式模式％m/％d/％Y，格式化日期为：mm/dd/yyyy：
			SELECT DATE_FORMAT(CURDATE(), '%m/%d/%Y') today;
			mysql>  +------------+
					| today      |
					+------------+
					| 07/18/2022 |
					+------------+
		5、要计算两个日期值之间的天数，可以使用DATEDIFF函数，例如：
			SELECT DATEDIFF('2015-11-04','2014-11-04') days;
			mysql>  +------+
					| days |
					+------+
					|  365 |
					+------+
		6、要添加几天，几周，几个月，几年等到一个日期值，可以使用DATE_ADD函数：
			SELECT 
				'2018-01-01' start,
    			DATE_ADD('2018-01-01', INTERVAL 1 DAY) 'one day later',
    			DATE_ADD('2018-01-01', INTERVAL 1 WEEK) 'one week later',
    			DATE_ADD('2018-01-01', INTERVAL 1 MONTH) 'one month later',
    			DATE_ADD('2018-01-01', INTERVAL 1 YEAR) 'one year later';
    		mysql>  +------------+---------------+----------------+-----------------+----------------+
					| start      | one day later | one week later | one month later | one year later |
					+------------+---------------+----------------+-----------------+----------------+
					| 2018-01-01 | 2018-01-02    | 2018-01-08     | 2018-02-01      | 2019-01-01     |
					+------------+---------------+----------------+-----------------+----------------+
		7、要减少几天，几周，几个月，几年等到一个日期值，可以使用DATE_SUB函数从日期中减去间隔值：
			SELECT 
    			'2018-01-01' start,
    			DATE_SUB('2018-01-01', INTERVAL 1 DAY) 'one day before',
    			DATE_SUB('2018-01-01', INTERVAL 1 WEEK) 'one week before',
    			DATE_SUB('2018-01-01', INTERVAL 1 MONTH) 'one month before',
    			DATE_SUB('2018-01-01', INTERVAL 1 YEAR) 'one year before';
			mysql>  +------------+----------------+-----------------+------------------+-----------------+
					| start      | one day before | one week before | one month before | one year before |
					+------------+----------------+-----------------+------------------+-----------------+
					| 2018-01-01 | 2017-12-31     | 2017-12-25      | 2017-12-01       | 2017-01-01      |
					+------------+----------------+-----------------+------------------+-----------------+
		8、要获取日期值的日期，月份，季度和年份，可以使用相应的函数：DAY，MONTH，QUARTER和YEAR，如下所示：
			SELECT DAY('2018-12-31') day, 
       			MONTH('2018-12-31') month, 
       			QUARTER('2018-12-31') quarter, 
       			YEAR('2018-12-31') year;
			mysql>  +-----+-------+---------+------+
					| day | month | quarter | year |
					+-----+-------+---------+------+
					|  31 |    12 |       4 | 2018 |
					+-----+-------+---------+------+
		9.1、获得周信息周相关功能。例如，WEEK函数返回周数，WEEKDAY函数返回工作日索引，WEEKOFYEAR函数返回周日历。
			SELECT 
    			WEEKDAY('2018-12-31') weekday,
    			WEEK('2018-12-31') week,
    			WEEKOFYEAR('2018-12-31') weekofyear;
			mysql>  +---------+------+------------+
					| weekday | week | weekofyear |
					+---------+------+------------+
					|       0 |   52 |          1 |
					+---------+------+------------+
		9.2、如果没有传递第二个参数，或者如果传递参数为0，则week函数将返回带有零的索引的周数。如果传递参数为1，则将返回1索引的周数。
			SELECT 
    			WEEKDAY('2018-12-31') weekday,
    			WEEK('2018-12-31',1) week,
    			WEEKOFYEAR('2018-12-31') weekofyear;
			mysql>  +---------+------+------------+
					| weekday | week | weekofyear |
					+---------+------+------------+
					|       0 |   53 |          1 |
					+---------+------+------------+
	二、TIME函数：
		1、要获取数据库服务器的当前时间，请使用CURRENT_TIME函数。根据使用该函数的上下文，CURRENT_TIME函数以字符串('HH:MM:SS')或数值(HHMMSS)返回当前时间值。例如：
			SELECT
    			CURRENT_TIME() AS string_now,
    			CURRENT_TIME() + 0 AS numeric_now;
			mysql>  +------------+-------------+
					| string_now | numeric_now |
					+------------+-------------+
					| 23:04:53   |      230453 |
					+------------+-------------+
		2、要将TIME值添加到另一个TIME值，请使用ADDTIME函数。要从另一个TIME值中减去TIME值，可以使用SUBTIME函数。以下语句从当前时间起减去2小时30分钟。
			SELECT 
    			CURRENT_TIME(),
    			ADDTIME(CURRENT_TIME(), 023000), 
    			SUBTIME(CURRENT_TIME(), 023000);
			mysql>  +----------------+---------------------------------+---------------------------------+
					| CURRENT_TIME() | ADDTIME(CURRENT_TIME(), 023000) | SUBTIME(CURRENT_TIME(), 023000) |
					+----------------+---------------------------------+---------------------------------+
					| 23:05:03       | 25:35:03                        | 20:35:03                        |
					+----------------+---------------------------------+---------------------------------+
		3、可以使用TIMEDIFF()函数来获取两个TIME值之间的差异。
			SELECT 
    			TIMEDIFF(end_at, start_at)
			FROM
    			tests;
			mysql>  +----------------------------+
					| TIMEDIFF(end_at, start_at) |
					+----------------------------+
					| 02:00:00                   |
					| 01:45:00                   |
					| 02:00:00                   |
					| 01:00:00                   |
					+----------------------------+
		4、格式化MySQL TIME值，虽然MySQL在检索和显示TIME值时使用“HH:MM:SS”，但可以使用TIME_FORMAT函数以推荐的方式显示TIME值。TIME_FORMAT函数类似于DATE_FORMAT函数，除了TIME_FORMAT函数仅用于格式化TIME值其它均差不多。例如：
			SELECT 
    			name,
    			TIME_FORMAT(start_at, '%h:%i %p') start_at,
    			TIME_FORMAT(end_at, '%h:%i %p') end_at
			FROM
    			tests;
			mysql>  +--------+----------+----------+
					| name   | start_at | end_at   |
					+--------+----------+----------+
					| Test 1 | 08:00 AM | 10:00 AM |
					| Test 2 | 08:30 AM | 10:15 AM |
					| Test 3 | 08:20 AM | 10:20 AM |
					| Test 4 | 09:05 AM | 10:05 AM |
					+--------+----------+----------+
					在上面的时间格式字符串中：％h表示从0到12的两位数小时数值。％i表示从0到60的两位数分钟数值。％p表示AM或PM，也就是表示上午或下午。
		5、要从TIME值中提取小时，分和秒，可以使用HOUR，MINUTE和SECOND函数，如下所示：
			SELECT 
				CURRENT_TIME(),
				HOUR(CURRENT_TIME()),
				MINUTE(CURRENT_TIME()),
				SECOND(CURRENT_TIME());
			mysql>  +----------------+----------------------+------------------------+------------------------+
					| CURRENT_TIME() | HOUR(CURRENT_TIME()) | MINUTE(CURRENT_TIME()) | SECOND(CURRENT_TIME()) |
					+----------------+----------------------+------------------------+------------------------+
					| 16:50:54       |                   16 |                     50 |                     54 |
					+----------------+----------------------+------------------------+------------------------+
		6、获取UTC时间值，使用UTC_TIME函数，如下所示：
			SELECT 
   				CURRENT_TIME(), 
   				UTC_TIME();
			mysql>  +----------------+------------+
					| CURRENT_TIME() | UTC_TIME() |
					+----------------+------------+
					| 23:05:41       | 15:05:41   |
					+----------------+------------+


-----------------------------------------------------------------------------


D.4 二进制数据类型
二进制数据类型可存储任何数据（甚至包括二进制信息），如图像、多媒体、字处理文档等

TINYBLOB      BLOB最大长度为255字节
BLOB          BLOB最大长度为64KB
MEDIUMBLOB    BLOB最大长度为16MiB
LONGBLOB      BLOB最大长度为4GB